name: $(ModuleName)-$(ModuleVersion)

variables:
- name: ModuleName
  value: DevOpsAgentDebian
- name: ModuleVersion
  value: 1.0
- group: vg.DevOpsAgent

trigger:
  branches:
    include:
      - master
  paths:
    include:
    - Agents/Docker/Linux/Debian/*

stages:
- stage: BuildPush
  jobs:
  - job: 'BuildImage'
    displayName: Build and Push Docker Container Image
    pool:
      vmImage: $(vmImageLinux)
    workspace:
      clean: all
    steps:
      - task: PowerShell@2
        enabled: true
        inputs:
          targetType: 'inline'
          script: |
            $ACR_NAME = "$(acrName)"
            $ACR_KEY = "$(acrKey)"
            $ACR_URL = "$ACR_NAME.azurecr.io"
            
            docker build --rm -f "Agents/Docker/Linux/Debian/dockerfile" -t adoagent_debian:latest .
            docker images
            docker login "$ACR_URL" --username "$ACR_NAME" --password "$ACR_KEY"
            docker tag adoagent_debian "$ACR_URL/ado/adoagent_debian"
            docker push "$ACR_URL/ado/adoagent_debian"
- stage: Deploy
  jobs:
  - job: 'Deploy'
    displayName: Deploy Docker Container
    pool:
      vmImage: $(vmImageLinux)
    workspace:
      clean: all
    steps:
      - task: AzurePowerShell@4
        displayName: 'Start Docker Container'
        inputs:
          azureSubscription: $(ServiceConnection)
          ScriptType: InlineScript
          Inline: |
            New-AzResourceGroup -Name "$(resourceGroup)" -Location "$(location)" -force
            $RegistryName = "$(acrName)"
            $RegistryKey = "$(acrKey)"
            $agentCount = "$(agentCount)"
            $containerNamePrefix = "$(containerNamePrefix)" + "debian"
            $resourceGroup = "$(resourceGroup)"
            $image = "$RegistryName" + ".azurecr.io/ado/adoagent_debian:latest"

            $RegistryCredentials= New-Object System.Management.Automation.PSCredential ("$RegistryName", (ConvertTo-SecureString "$RegistryKey" -AsPlainText -Force))
            $container= @()
            $envVars = @{
            "AZP_URL"="$(adoUrl)";
            "AZP_TOKEN"="$(agentPoolToken)";
            "AZP_POOL"="$(agentPool)"}

            for ($i=1; $i -le $agentCount; $i++) {
                $containerName = $containerNamePrefix + "00$i"
                Write-Output "Creating container $containerName ..."
                $envVars["AZP_AGENT_NAME"] = $containerName
                New-AzContainerGroup `
                    -ResourceGroupName $resourceGroup `
                    -Name "$containerName" `
                    -Image "$image" `
                    -RegistryCredential $RegistryCredentials `
                    -Cpu 1 `
                    -MemoryInGB 4 `
                    -OsType Linux `
                    -RestartPolicy OnFailure `
                    -EnvironmentVariable $envVars
                $container += "$containerName"
            }
            Write-Output $container
          azurePowerShellVersion: LatestVersion